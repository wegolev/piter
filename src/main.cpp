#include <iostream>
#include<string>

/*
    Прежде всего определимся с заголовком функции Print. 
Она должна работать с любым контейнером. 
Проще всего будет сделать тип контейнера шаблонным параметров функции.
    Сам контейнер и строку-разделитель мы будем принимать по константной ссылке,
чтобы избежать лишних и ненужных копирований. 
Про необходимость передачи по константной ссылке даже написано в примечании 
к условию (это специально проверяется в тестах).
    Постараемся решить задачу, не предполагая ничего дополнительного о контейнере, 
кроме того, что сказано в условии. 
    Гарантируется, что по контейнеру можно пройтись с помощью range-based for:
*/
template <typename Container>
void Print(Container data, std::string delimiter); {
    bool first = true;

    for (auto elem : data) {
        if (!first) {
            std::cout << delimiter;
        } else {
            first = false;
        }

        std::cout << elem;
    }
    
    std::cout << "\n"
}

int main() {
    return 0;
}